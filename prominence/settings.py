"""
Django settings for prominence project.

Generated by 'django-admin startproject' using Django 3.0.8.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
with open('/etc/prominence/secret_key.txt') as f:
    SECRET_KEY = f.read().strip()

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'rest_framework',
    'rest_framework.authtoken',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'egicheckin',
    'widget_tweaks',
    'crispy_forms',
    'custom_user',
    'frontend',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'prominence.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'prominence.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': 'prominence',
        'USER': 'prominenceuser',
        'PASSWORD': 'pcworld',
        'HOST': 'localhost',
        'PORT': '',
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static/')

# Uploads
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_URL = '/media/'

# Authentication

AUTHENTICATION_BACKENDS = (
    "django.contrib.auth.backends.ModelBackend",
    "allauth.account.auth_backends.AuthenticationBackend",
)

SITE_ID = 1

ACCOUNT_EMAIL_SUBJECT_PREFIX = '[prominence]'

ACCOUNT_UNIQUE_EMAIL = False

# We don't need email verification upon signup as we're using GitHub
ACCOUNT_EMAIL_VERIFICATION = 'none'

# We want email addresses
ACCOUNT_EMAIL_REQUIRED = True

# Automatically signup
SOCIALACCOUNT_AUTO_SIGNUP = True

# Ensure users have to log back in (doesn't seem to work)
#ACCOUNT_SESSION_REMEMBER = False

# Redirect authenticated users to this URL
LOGIN_REDIRECT_URL = 'index'

# Specify required scopes
SOCIALACCOUNT_PROVIDERS = {
    'egicheckin': {
        'SCOPE': [
            'profile',
            'email',
            'openid',
            'eduperson_entitlement'
        ],
    }
}

# Redirect
LOGIN_URL = '/'

AUTH_USER_MODEL = 'custom_user.User'

CRISPY_TEMPLATE_PACK = 'bootstrap4'

SESSION_COOKIE_SECURE = True
SECURE_SSL_REDIRECT = True
CSRF_COOKIE_SECURE = True
SECURE_HSTS_SECONDS = 30
SECURE_HSTS_INCLUDE_SUBDOMAINS = True
SECURE_HSTS_PRELOAD = True

# Logging
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'file': {
            'format': '%(asctime)s %(name)-12s %(levelname)-8s %(message)s'
        },
    },
    'handlers': {
        'file': {
            'level': 'INFO',
            'class': 'logging.handlers.RotatingFileHandler',
            'filename': '/var/log/prominence/prominence.log',
            'maxBytes': 1024*1024*20,
            'backupCount': 5,
            'formatter': 'file',
        },
    },
    'loggers': {
        '': {
            'handlers': ['file'],
            'level': 'INFO'
        }
    },
}

# Prominence settings
PROMINENCE_SANDBOX_PATH = '/var/spool/prominence/sandboxes'
PROMINENCE_DEFAULT_MAX_RUNTIME = 43200
PROMINENCE_DEFAULT_DISK_GB = 10
PROMINENCE_WORKFLOW_MAX_IDLE = 400
PROMINENCE_EXEC_TIMEOUT = 10
PROMINENCE_ENABLE_EXEC = False
PROMINENCE_ENABLE_SNAPSHOTS = True
PROMINENCE_ENABLE_DATA = True
PROMINENCE_REQUIRED_ENTITLEMENTS = []
PROMINENCE_IMC_URL = 'http://localhost:5000/credentials'
PROMINENCE_IMC_USERNAME = ''
PROMINENCE_IMC_PASSWORD = ''
PROMINENCE_IMC_SSL_CERT = '/etc/prominence/credentials/hostcert.pem'
PROMINENCE_IMC_SSL_KEY = '/etc/prominence/credentials/hostkey.pem'
PROMINENCE_INFLUXDB_URL = 'http://localhost:9999'
PROMINENCE_INFLUXDB_TOKEN = ''
PROMINENCE_INFLUXDB_ORG = 'prominence'
PROMINENCE_INFLUXDB_BUCKET = 'data'
PROMINENCE_CLIENT_ID = ''
PROMINENCE_CLIENT_SECRET = ''
PROMINENCE_SCOPES = ["openid", "profile", "email", "offline_access"]
PROMINENCE_OIDC_BASE_URL = 'https://aai-dev.egi.eu/oidc/'
PROMINENCE_AUTHORISATION_BASE_URL = 'https://aai-dev.egi.eu/oidc/authorize'
PROMINENCE_TOKEN_URL = 'https://aai-dev.egi.eu/oidc/token'
PROMINENCE_S3_URL = ''
PROMINENCE_S3_BUCKET = ''
PROMINENCE_S3_ACCESS_KEY_ID = ''
PROMINENCE_S3_SECRET_ACCESS_KEY = ''
